--TAO VIEW CHUYEN DOI HOC KI
CREATE OR REPLACE VIEW VW_CHANGE_SEMESTER AS
SELECT ID, COURSE_ID, SEC_ID, YEAR, POINT,
DECODE (SEMESTER, 'Fall', CONCAT(YEAR, '2'),
                  'Spring', CONCAT(YEAR, '1'), 0) SEMESTER_NUMBER
FROM VW_TAKES_NUMBER;

--TAO VIEW CHUA THONG TIN DE TINH TOAN CPA/GPA/TCTL
CREATE OR REPLACE VIEW VW_SUMMARY_ALL AS
SELECT VC.ID, S.NAME, VC.COURSE_ID, VC.YEAR, VC.POINT, VC.SEMESTER_NUMBER, C.CREDITS  
FROM VW_CHANGE_SEMESTER VC JOIN COURSE C
ON VC.COURSE_ID = C.COURSE_ID  JOIN STUDENT S ON S.ID = VC.ID; 

--TAO FUNCTION TINH TONG SO TIN CHI TICH LUY
CREATE OR REPLACE FUNCTION F_SUM_CREDITS 
(
  STUDENT_ID NUMBER,
  SEMESTER_MAX NUMBER
) 
RETURN NUMBER IS FUNC_RESULT NUMBER;
BEGIN
  SELECT SUM(CREDITS) INTO FUNC_RESULT FROM 
  (
    SELECT ID, NAME, COURSE_ID, CREDITS, MAX(POINT) MAX_POINT 
    FROM VW_SUMMARY_ALL
    WHERE TO_NUMBER(SEMESTER_NUMBER) <= TO_NUMBER(SEMESTER_MAX)
    GROUP BY COURSE_ID, NAME, CREDITS, ID
  ) T WHERE T.MAX_POINT >= 1
  GROUP BY T.ID, T.NAME;
  RETURN FUNC_RESULT;
END;

--TAO HAM TINH CPA
CREATE OR REPLACE FUNCTION F_CPA (STUDENT_ID NUMBER, SEMESTER_MAX NUMBER) 
RETURN FLOAT IS FUNC_RESULT FLOAT;
BEGIN
  SELECT ROUND(SUM(T.MAX_POINT*T.CREDITS)/SUM(T.CREDITS), 2) INTO FUNC_RESULT
  FROM (SELECT SU.ID, SU.NAME, SU.COURSE_ID, SU.CREDITS, MAX(POINT) MAX_POINT
  FROM VW_SUMMARY_ALL SU WHERE TO_NUMBER(SU.SEMESTER_NUMBER) > TO_NUMBER(SEMESTER_MAX)
  GROUP BY SU.COURSE_ID, SU.NAME, SU.CREDITS, SU.ID) T
  WHERE T.ID = STUDENT_ID 
  GROUP BY T.ID, T.NAME;
  RETURN FUNC_RESULT;
END;

--TAO THU TUC DUA RA KET QUA THEO YEU CAU BAI TOAN
CREATE OR REPLACE PROCEDURE SP_RESULT_POINT
(
  STUDENT_ID NUMBER,
  RESULT_CURSOR OUT SYS_REFCURSOR
) IS
BEGIN
  OPEN RESULT_CURSOR FOR
  SELECT SU.ID, SU.NAME, SU.SEMESTER_NUMBER, 
  ROUND(SUM(SU.POINT*SU.CREDITS)/SUM(SU.CREDITS)) GPA, SUM(SU.CREDITS) TONG_TIN_CHI,
  F_CPA(STUDENT_ID, SU.SEMESTER_NUMBER) CPA,
  F_SUM_CREDITS(STUDENT_ID, SU.SEMESTER_NUMBER) TCTL
  FROM VW_SUMMARY_ALL SU 
  WHERE ID = STUDENT_ID
  GROUP BY SU.SEMESTER_NUMBER, SU.NAME, SU.YEAR, SU.ID
  ORDER BY SU.SEMESTER_NUMBER ASC;
END;
